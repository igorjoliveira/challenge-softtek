// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Softtek.Data.Context;

#nullable disable

namespace Softtek.Data.Migrations
{
    [DbContext(typeof(SofttekDbContext))]
    partial class SofttekDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.5");

            modelBuilder.Entity("Softtek.Domain.Aggregates.AssistenciaEmocional.ApoioBase", b =>
                {
                    b.Property<string>("Codigo")
                        .HasMaxLength(26)
                        .HasColumnType("TEXT");

                    b.Property<string>("ApoioAggregateId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("TEXT");

                    b.Property<string>("Descricao")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("TEXT");

                    b.HasKey("Codigo");

                    b.HasIndex("ApoioAggregateId");

                    b.ToTable("Apoios", (string)null);

                    b.UseTptMappingStrategy();
                });

            modelBuilder.Entity("Softtek.Domain.Aggregates.AssistenciaEmocional.AssistenciaAggregate", b =>
                {
                    b.Property<string>("Codigo")
                        .HasMaxLength(26)
                        .HasColumnType("TEXT");

                    b.HasKey("Codigo");

                    b.ToTable("Assistencia", (string)null);
                });

            modelBuilder.Entity("Softtek.Domain.Aggregates.AvaliacaoPsicossocial.AvaliacaoAggregate", b =>
                {
                    b.Property<string>("Codigo")
                        .HasMaxLength(26)
                        .HasColumnType("TEXT");

                    b.Property<DateOnly>("DataCriacao")
                        .HasColumnType("TEXT");

                    b.HasKey("Codigo");

                    b.ToTable("Avaliacoes", (string)null);

                    b.HasData(
                        new
                        {
                            Codigo = "01JVKE1RX5KAMJ0Q2TAEBY4X8V",
                            DataCriacao = new DateOnly(2025, 5, 19)
                        });
                });

            modelBuilder.Entity("Softtek.Domain.Aggregates.AvaliacaoPsicossocial.BlocoDePergunta", b =>
                {
                    b.Property<string>("Codigo")
                        .HasMaxLength(26)
                        .HasColumnType("TEXT");

                    b.Property<string>("AvaliacaoCodigo")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Frequencia")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.HasKey("Codigo");

                    b.HasIndex("AvaliacaoCodigo");

                    b.ToTable("BlocosDePergunta", (string)null);

                    b.HasData(
                        new
                        {
                            Codigo = "01JVKE1RX7RG0ZFPZQY5JY4RP6",
                            AvaliacaoCodigo = "01JVKE1RX5KAMJ0Q2TAEBY4X8V",
                            Frequencia = 1,
                            Titulo = "Mapeamento de Riscos - Ansiedade/Depressão/Burnout"
                        },
                        new
                        {
                            Codigo = "01JVKE1RX797351H5MJKG6DBJJ",
                            AvaliacaoCodigo = "01JVKE1RX5KAMJ0Q2TAEBY4X8V",
                            Frequencia = 3,
                            Titulo = "Fatores de Carga de Trabalho"
                        },
                        new
                        {
                            Codigo = "01JVKE1RX7DFV0JQEG28FPNF8Y",
                            AvaliacaoCodigo = "01JVKE1RX5KAMJ0Q2TAEBY4X8V",
                            Frequencia = 3,
                            Titulo = "Sinais de Alerta"
                        },
                        new
                        {
                            Codigo = "01JVKE1RX7ZQFNR6CV58BXAWXW",
                            AvaliacaoCodigo = "01JVKE1RX5KAMJ0Q2TAEBY4X8V",
                            Frequencia = 3,
                            Titulo = "Diagnóstico de Clima - Relacionamento"
                        },
                        new
                        {
                            Codigo = "01JVKE1RX7P2Y15PJ6P9T8C49Z",
                            AvaliacaoCodigo = "01JVKE1RX5KAMJ0Q2TAEBY4X8V",
                            Frequencia = 3,
                            Titulo = "Comunicação"
                        },
                        new
                        {
                            Codigo = "01JVKE1RX7GWAQMGET3A9NF2AJ",
                            AvaliacaoCodigo = "01JVKE1RX5KAMJ0Q2TAEBY4X8V",
                            Frequencia = 3,
                            Titulo = "Relação com a Liderança"
                        });
                });

            modelBuilder.Entity("Softtek.Domain.Aggregates.AvaliacaoPsicossocial.Escala.EscalaBase", b =>
                {
                    b.Property<string>("Codigo")
                        .HasMaxLength(26)
                        .HasColumnType("TEXT");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("TEXT");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("TEXT");

                    b.Property<string>("EscalaValorCodigo")
                        .HasColumnType("TEXT");

                    b.HasKey("Codigo");

                    b.HasIndex("EscalaValorCodigo");

                    b.ToTable("Escalas");

                    b.HasDiscriminator().HasValue("EscalaBase");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("Softtek.Domain.Aggregates.AvaliacaoPsicossocial.Escala.EscalaBaseValor", b =>
                {
                    b.Property<string>("EscalaBaseCodigo")
                        .HasMaxLength(26)
                        .HasColumnType("TEXT");

                    b.Property<string>("EscalaValorCodigo")
                        .HasMaxLength(26)
                        .HasColumnType("TEXT");

                    b.HasKey("EscalaBaseCodigo", "EscalaValorCodigo");

                    b.HasIndex("EscalaValorCodigo");

                    b.ToTable("EscalaBaseValores", (string)null);

                    b.HasData(
                        new
                        {
                            EscalaBaseCodigo = "01JVKE1RX725KF9W6DGBC91V1B",
                            EscalaValorCodigo = "01JVKE1RX7NHW7RC4AC4S48JEK"
                        },
                        new
                        {
                            EscalaBaseCodigo = "01JVKE1RX725KF9W6DGBC91V1B",
                            EscalaValorCodigo = "01JVKE1RX7Q0NJ3J0049R2JJAF"
                        },
                        new
                        {
                            EscalaBaseCodigo = "01JVKE1RX725KF9W6DGBC91V1B",
                            EscalaValorCodigo = "01JVKE1RX7S2HB10EHQ7Q2XCM1"
                        },
                        new
                        {
                            EscalaBaseCodigo = "01JVKE1RX725KF9W6DGBC91V1B",
                            EscalaValorCodigo = "01JVKE1RX7WM56SDS95E5Q0GBH"
                        },
                        new
                        {
                            EscalaBaseCodigo = "01JVKE1RX725KF9W6DGBC91V1B",
                            EscalaValorCodigo = "01JVKE1RX7YMYM8SZRP6749V90"
                        },
                        new
                        {
                            EscalaBaseCodigo = "01JVKE1RX725KF9W6DGBC91V1B",
                            EscalaValorCodigo = "01JVKE1RX7ZJR27PH5PP17T0EC"
                        },
                        new
                        {
                            EscalaBaseCodigo = "01JVKE1RX77BZFDSZ11QZTF6WP",
                            EscalaValorCodigo = "01JVKE1RX76C4W6S9VKT36QC0B"
                        },
                        new
                        {
                            EscalaBaseCodigo = "01JVKE1RX77BZFDSZ11QZTF6WP",
                            EscalaValorCodigo = "01JVKE1RX76PKBN0QSFJBHM6NM"
                        },
                        new
                        {
                            EscalaBaseCodigo = "01JVKE1RX77BZFDSZ11QZTF6WP",
                            EscalaValorCodigo = "01JVKE1RX7B8PEEHFEJ8QZ9QKX"
                        },
                        new
                        {
                            EscalaBaseCodigo = "01JVKE1RX77BZFDSZ11QZTF6WP",
                            EscalaValorCodigo = "01JVKE1RX7BG7BGZN3TE208GK7"
                        },
                        new
                        {
                            EscalaBaseCodigo = "01JVKE1RX77BZFDSZ11QZTF6WP",
                            EscalaValorCodigo = "01JVKE1RX7D3805NM1BB760WHN"
                        },
                        new
                        {
                            EscalaBaseCodigo = "01JVKE1RX77BZFDSZ11QZTF6WP",
                            EscalaValorCodigo = "01JVKE1RX7KAF3TVRX27AWYCR9"
                        },
                        new
                        {
                            EscalaBaseCodigo = "01JVKE1RX7DJSCHTB9794FRVX2",
                            EscalaValorCodigo = "01JVKE1RX7462KQFTWG5KJ7NPR"
                        },
                        new
                        {
                            EscalaBaseCodigo = "01JVKE1RX7DJSCHTB9794FRVX2",
                            EscalaValorCodigo = "01JVKE1RX7A0JBKBESBPJWZABX"
                        },
                        new
                        {
                            EscalaBaseCodigo = "01JVKE1RX7DJSCHTB9794FRVX2",
                            EscalaValorCodigo = "01JVKE1RX7EPSXZ04GD9JB26TR"
                        },
                        new
                        {
                            EscalaBaseCodigo = "01JVKE1RX7DJSCHTB9794FRVX2",
                            EscalaValorCodigo = "01JVKE1RX7GV930MBY5QN7ATEQ"
                        },
                        new
                        {
                            EscalaBaseCodigo = "01JVKE1RX7DJSCHTB9794FRVX2",
                            EscalaValorCodigo = "01JVKE1RX7QBNAE98000CW5YPC"
                        },
                        new
                        {
                            EscalaBaseCodigo = "01JVKE1RX7FYD6WH6WSMV93BH2",
                            EscalaValorCodigo = "01JVKE1RX72TF9FXB82FYC574K"
                        },
                        new
                        {
                            EscalaBaseCodigo = "01JVKE1RX7FYD6WH6WSMV93BH2",
                            EscalaValorCodigo = "01JVKE1RX73KXWJ383F3JEZNKH"
                        },
                        new
                        {
                            EscalaBaseCodigo = "01JVKE1RX7FYD6WH6WSMV93BH2",
                            EscalaValorCodigo = "01JVKE1RX79HXBR32Q4E8YQXB0"
                        },
                        new
                        {
                            EscalaBaseCodigo = "01JVKE1RX7FYD6WH6WSMV93BH2",
                            EscalaValorCodigo = "01JVKE1RX7K3D11FNK65FEHS95"
                        },
                        new
                        {
                            EscalaBaseCodigo = "01JVKE1RX7FYD6WH6WSMV93BH2",
                            EscalaValorCodigo = "01JVKE1RX7VDCMZS129TCCWEQH"
                        },
                        new
                        {
                            EscalaBaseCodigo = "01JVKE1RX7J8KPDF355Y9APEV5",
                            EscalaValorCodigo = "01JVKE1RX7GBDG78ABFV4AEMBG"
                        },
                        new
                        {
                            EscalaBaseCodigo = "01JVKE1RX7J8KPDF355Y9APEV5",
                            EscalaValorCodigo = "01JVKE1RX7GJE94F1N0XTPQFCW"
                        },
                        new
                        {
                            EscalaBaseCodigo = "01JVKE1RX7J8KPDF355Y9APEV5",
                            EscalaValorCodigo = "01JVKE1RX7HHS3AZ6A48A7VPNB"
                        },
                        new
                        {
                            EscalaBaseCodigo = "01JVKE1RX7J8KPDF355Y9APEV5",
                            EscalaValorCodigo = "01JVKE1RX7JGSFKCG5397QVH37"
                        },
                        new
                        {
                            EscalaBaseCodigo = "01JVKE1RX7J8KPDF355Y9APEV5",
                            EscalaValorCodigo = "01JVKE1RX7V4YTP9H967PA08ZD"
                        });
                });

            modelBuilder.Entity("Softtek.Domain.Aggregates.AvaliacaoPsicossocial.Escala.EscalaValor", b =>
                {
                    b.Property<string>("Codigo")
                        .HasMaxLength(26)
                        .HasColumnType("TEXT");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.HasKey("Codigo");

                    b.ToTable("EscalaValores", (string)null);

                    b.HasData(
                        new
                        {
                            Codigo = "01JVKE1RX7D3805NM1BB760WHN",
                            Descricao = "Triste"
                        },
                        new
                        {
                            Codigo = "01JVKE1RX7BG7BGZN3TE208GK7",
                            Descricao = "Alegre"
                        },
                        new
                        {
                            Codigo = "01JVKE1RX76PKBN0QSFJBHM6NM",
                            Descricao = "Cansado"
                        },
                        new
                        {
                            Codigo = "01JVKE1RX76C4W6S9VKT36QC0B",
                            Descricao = "Ansioso"
                        },
                        new
                        {
                            Codigo = "01JVKE1RX7KAF3TVRX27AWYCR9",
                            Descricao = "Medo"
                        },
                        new
                        {
                            Codigo = "01JVKE1RX7B8PEEHFEJ8QZ9QKX",
                            Descricao = "Raiva"
                        },
                        new
                        {
                            Codigo = "01JVKE1RX7ZJR27PH5PP17T0EC",
                            Descricao = "Motivado"
                        },
                        new
                        {
                            Codigo = "01JVKE1RX7Q0NJ3J0049R2JJAF",
                            Descricao = "Cansado"
                        },
                        new
                        {
                            Codigo = "01JVKE1RX7S2HB10EHQ7Q2XCM1",
                            Descricao = "Preocupado"
                        },
                        new
                        {
                            Codigo = "01JVKE1RX7WM56SDS95E5Q0GBH",
                            Descricao = "Estressado"
                        },
                        new
                        {
                            Codigo = "01JVKE1RX7YMYM8SZRP6749V90",
                            Descricao = "Animado"
                        },
                        new
                        {
                            Codigo = "01JVKE1RX7NHW7RC4AC4S48JEK",
                            Descricao = "Satisfeito"
                        },
                        new
                        {
                            Codigo = "01JVKE1RX7V4YTP9H967PA08ZD",
                            Descricao = "Muito Leve"
                        },
                        new
                        {
                            Codigo = "01JVKE1RX7GBDG78ABFV4AEMBG",
                            Descricao = "Leve"
                        },
                        new
                        {
                            Codigo = "01JVKE1RX7GJE94F1N0XTPQFCW",
                            Descricao = "Média"
                        },
                        new
                        {
                            Codigo = "01JVKE1RX7JGSFKCG5397QVH37",
                            Descricao = "Alta"
                        },
                        new
                        {
                            Codigo = "01JVKE1RX7HHS3AZ6A48A7VPNB",
                            Descricao = "Muito Alta"
                        },
                        new
                        {
                            Codigo = "01JVKE1RX7VDCMZS129TCCWEQH",
                            Descricao = "Não"
                        },
                        new
                        {
                            Codigo = "01JVKE1RX73KXWJ383F3JEZNKH",
                            Descricao = "Raramente"
                        },
                        new
                        {
                            Codigo = "01JVKE1RX72TF9FXB82FYC574K",
                            Descricao = "Às vezes"
                        },
                        new
                        {
                            Codigo = "01JVKE1RX7K3D11FNK65FEHS95",
                            Descricao = "Frequentemente"
                        },
                        new
                        {
                            Codigo = "01JVKE1RX79HXBR32Q4E8YQXB0",
                            Descricao = "Sempre"
                        },
                        new
                        {
                            Codigo = "01JVKE1RX7EPSXZ04GD9JB26TR",
                            Descricao = "1"
                        },
                        new
                        {
                            Codigo = "01JVKE1RX7GV930MBY5QN7ATEQ",
                            Descricao = "2"
                        },
                        new
                        {
                            Codigo = "01JVKE1RX7A0JBKBESBPJWZABX",
                            Descricao = "3"
                        },
                        new
                        {
                            Codigo = "01JVKE1RX7462KQFTWG5KJ7NPR",
                            Descricao = "4"
                        },
                        new
                        {
                            Codigo = "01JVKE1RX7QBNAE98000CW5YPC",
                            Descricao = "5"
                        });
                });

            modelBuilder.Entity("Softtek.Domain.Aggregates.AvaliacaoPsicossocial.Pergunta", b =>
                {
                    b.Property<string>("Codigo")
                        .HasMaxLength(26)
                        .HasColumnType("TEXT");

                    b.Property<string>("BlocoDePerguntaCodigo")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool?>("Desativado")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("TEXT");

                    b.Property<string>("EscalaCodigo")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Codigo");

                    b.HasIndex("BlocoDePerguntaCodigo");

                    b.HasIndex("EscalaCodigo");

                    b.ToTable("Perguntas", (string)null);

                    b.HasData(
                        new
                        {
                            Codigo = "01JVKE1RX725EE038B0X9QDYB2",
                            BlocoDePerguntaCodigo = "01JVKE1RX7GWAQMGET3A9NF2AJ",
                            Descricao = "Minha liderança está disponível para me ouvir quando necessário.",
                            EscalaCodigo = "01JVKE1RX7DJSCHTB9794FRVX2"
                        },
                        new
                        {
                            Codigo = "01JVKE1RX72NJ00BWH8FXYTY0N",
                            BlocoDePerguntaCodigo = "01JVKE1RX797351H5MJKG6DBJJ",
                            Descricao = "Sua carga de trabalho afeta sua qualidade de vida?",
                            EscalaCodigo = "01JVKE1RX7FYD6WH6WSMV93BH2"
                        },
                        new
                        {
                            Codigo = "01JVKE1RX76VFHXHYWBECCGFV3",
                            BlocoDePerguntaCodigo = "01JVKE1RX7P2Y15PJ6P9T8C49Z",
                            Descricao = "Recebo orientações claras e objetivas sobre minhas atividades e responsabilidades.",
                            EscalaCodigo = "01JVKE1RX7DJSCHTB9794FRVX2"
                        },
                        new
                        {
                            Codigo = "01JVKE1RX78XJF0XTNPE8V54E4",
                            BlocoDePerguntaCodigo = "01JVKE1RX7RG0ZFPZQY5JY4RP6",
                            Descricao = "Escolha o seu emoji de hoje!",
                            EscalaCodigo = "01JVKE1RX77BZFDSZ11QZTF6WP"
                        },
                        new
                        {
                            Codigo = "01JVKE1RX79MAPTMEGHJWCVFB8",
                            BlocoDePerguntaCodigo = "01JVKE1RX7DFV0JQEG28FPNF8Y",
                            Descricao = "Você tem apresentado sintomas como insônia, irritabilidade ou cansaço extremo?",
                            EscalaCodigo = "01JVKE1RX7FYD6WH6WSMV93BH2"
                        },
                        new
                        {
                            Codigo = "01JVKE1RX7BXQV9FEP382AVF1X",
                            BlocoDePerguntaCodigo = "01JVKE1RX797351H5MJKG6DBJJ",
                            Descricao = "Como você avalia sua carga de trabalho?",
                            EscalaCodigo = "01JVKE1RX7J8KPDF355Y9APEV5"
                        },
                        new
                        {
                            Codigo = "01JVKE1RX7C64P9QSKGVNH47G6",
                            BlocoDePerguntaCodigo = "01JVKE1RX7GWAQMGET3A9NF2AJ",
                            Descricao = "Me sinto confortável para reportar problemas ou dificuldades ao meu líder.",
                            EscalaCodigo = "01JVKE1RX7DJSCHTB9794FRVX2"
                        },
                        new
                        {
                            Codigo = "01JVKE1RX7D9Q95M1F9DQNC48P",
                            BlocoDePerguntaCodigo = "01JVKE1RX7ZQFNR6CV58BXAWXW",
                            Descricao = "Sinto que existe espírito de cooperação entre os colaboradores.",
                            EscalaCodigo = "01JVKE1RX7DJSCHTB9794FRVX2"
                        },
                        new
                        {
                            Codigo = "01JVKE1RX7DJ1TS3AFTGTAXXEC",
                            BlocoDePerguntaCodigo = "01JVKE1RX797351H5MJKG6DBJJ",
                            Descricao = "Você trabalha além do seu horário regular?",
                            EscalaCodigo = "01JVKE1RX7FYD6WH6WSMV93BH2"
                        },
                        new
                        {
                            Codigo = "01JVKE1RX7GGE9XHXENTQMEG10",
                            BlocoDePerguntaCodigo = "01JVKE1RX7P2Y15PJ6P9T8C49Z",
                            Descricao = "Sinto que posso me comunicar abertamente com minha liderança.",
                            EscalaCodigo = "01JVKE1RX7DJSCHTB9794FRVX2"
                        },
                        new
                        {
                            Codigo = "01JVKE1RX7GRPV0GPYPYCZ2SQA",
                            BlocoDePerguntaCodigo = "01JVKE1RX7P2Y15PJ6P9T8C49Z",
                            Descricao = "Tenho clareza sobre as metas e os resultados esperados de mim.",
                            EscalaCodigo = "01JVKE1RX7DJSCHTB9794FRVX2"
                        },
                        new
                        {
                            Codigo = "01JVKE1RX7GXZTM1Z0VG31PF1A",
                            BlocoDePerguntaCodigo = "01JVKE1RX7ZQFNR6CV58BXAWXW",
                            Descricao = "Como está o seu relacionamento com seus colegas de trabalho numa escala de 1 a 5? (Sendo 01 - ruim e 05 - Ótimo)",
                            EscalaCodigo = "01JVKE1RX7DJSCHTB9794FRVX2"
                        },
                        new
                        {
                            Codigo = "01JVKE1RX7HJ1FMPGS9PS08RCF",
                            BlocoDePerguntaCodigo = "01JVKE1RX7DFV0JQEG28FPNF8Y",
                            Descricao = "Você sente que sua saúde mental prejudica sua produtividade no trabalho?",
                            EscalaCodigo = "01JVKE1RX7FYD6WH6WSMV93BH2"
                        },
                        new
                        {
                            Codigo = "01JVKE1RX7KCW6CAX81SPFYXKT",
                            BlocoDePerguntaCodigo = "01JVKE1RX7ZQFNR6CV58BXAWXW",
                            Descricao = "Sinto que sou tratado(a) com respeito pelos meus colegas de trabalho.",
                            EscalaCodigo = "01JVKE1RX7DJSCHTB9794FRVX2"
                        },
                        new
                        {
                            Codigo = "01JVKE1RX7KW62H3M16NSSBSFD",
                            BlocoDePerguntaCodigo = "01JVKE1RX7GWAQMGET3A9NF2AJ",
                            Descricao = "Existe confiança e transparência na relação com minha liderança.",
                            EscalaCodigo = "01JVKE1RX7DJSCHTB9794FRVX2"
                        },
                        new
                        {
                            Codigo = "01JVKE1RX7KYMMC1P9BCMYBNSM",
                            BlocoDePerguntaCodigo = "01JVKE1RX7ZQFNR6CV58BXAWXW",
                            Descricao = "Como está o seu relacionamento com seu chefe numa escala de 1 a 5? (Sendo 01 - ruim e 05 - Ótimo)",
                            EscalaCodigo = "01JVKE1RX7DJSCHTB9794FRVX2"
                        },
                        new
                        {
                            Codigo = "01JVKE1RX7MSYM0T3DAPFP7YFS",
                            BlocoDePerguntaCodigo = "01JVKE1RX7GWAQMGET3A9NF2AJ",
                            Descricao = "Minha liderança reconhece minhas entregas e esforços.",
                            EscalaCodigo = "01JVKE1RX7DJSCHTB9794FRVX2"
                        },
                        new
                        {
                            Codigo = "01JVKE1RX7MZKT0T6ZQSNY7HA9",
                            BlocoDePerguntaCodigo = "01JVKE1RX7GWAQMGET3A9NF2AJ",
                            Descricao = "Minha liderança demonstra interesse pelo meu bem-estar no trabalho.",
                            EscalaCodigo = "01JVKE1RX7DJSCHTB9794FRVX2"
                        },
                        new
                        {
                            Codigo = "01JVKE1RX7PPGEZ2JTT2RDKC0G",
                            BlocoDePerguntaCodigo = "01JVKE1RX7ZQFNR6CV58BXAWXW",
                            Descricao = "Consigo me relacionar de forma saudável e colaborativa com minha equipe.",
                            EscalaCodigo = "01JVKE1RX7DJSCHTB9794FRVX2"
                        },
                        new
                        {
                            Codigo = "01JVKE1RX7SJTGPSAWPXJR00EX",
                            BlocoDePerguntaCodigo = "01JVKE1RX7ZQFNR6CV58BXAWXW",
                            Descricao = "Tenho liberdade para expressar minhas opiniões sem medo de retaliações.",
                            EscalaCodigo = "01JVKE1RX7DJSCHTB9794FRVX2"
                        },
                        new
                        {
                            Codigo = "01JVKE1RX7TM9DKQTMHPBND657",
                            BlocoDePerguntaCodigo = "01JVKE1RX7ZQFNR6CV58BXAWXW",
                            Descricao = "Me sinto acolhido(a) a parte do time onde trabalho.",
                            EscalaCodigo = "01JVKE1RX7DJSCHTB9794FRVX2"
                        },
                        new
                        {
                            Codigo = "01JVKE1RX7VH5HARQ66KW44E40",
                            BlocoDePerguntaCodigo = "01JVKE1RX7P2Y15PJ6P9T8C49Z",
                            Descricao = "As informações importantes circulam de forma eficiente dentro da empresa.",
                            EscalaCodigo = "01JVKE1RX7DJSCHTB9794FRVX2"
                        },
                        new
                        {
                            Codigo = "01JVKE1RX7XQD4XD7AVJX8B9PW",
                            BlocoDePerguntaCodigo = "01JVKE1RX7RG0ZFPZQY5JY4RP6",
                            Descricao = "Como você se sente hoje?",
                            EscalaCodigo = "01JVKE1RX725KF9W6DGBC91V1B"
                        });
                });

            modelBuilder.Entity("Softtek.Domain.Aggregates.MonitoramentoEmocional.Questionario", b =>
                {
                    b.Property<string>("Codigo")
                        .HasMaxLength(26)
                        .HasColumnType("TEXT");

                    b.Property<string>("BlocoDePerguntaCodigo")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateOnly>("DataPreenchimento")
                        .HasColumnType("TEXT");

                    b.HasKey("Codigo");

                    b.HasIndex("BlocoDePerguntaCodigo");

                    b.ToTable("Questionarios", (string)null);
                });

            modelBuilder.Entity("Softtek.Domain.Aggregates.MonitoramentoEmocional.Resposta", b =>
                {
                    b.Property<string>("Codigo")
                        .HasMaxLength(26)
                        .HasColumnType("TEXT");

                    b.Property<string>("EscalaValorCodigo")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PerguntaCodigo")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("QuestionarioCodigo")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Codigo");

                    b.HasIndex("EscalaValorCodigo");

                    b.HasIndex("PerguntaCodigo");

                    b.HasIndex("QuestionarioCodigo", "PerguntaCodigo", "EscalaValorCodigo")
                        .IsUnique()
                        .HasDatabaseName("IX_Respostas_Questionario_Pergunta_EscalaValor");

                    b.ToTable("Respostas", (string)null);
                });

            modelBuilder.Entity("Softtek.Domain.Aggregates.AssistenciaEmocional.Tipos.Lembrete", b =>
                {
                    b.HasBaseType("Softtek.Domain.Aggregates.AssistenciaEmocional.ApoioBase");

                    b.Property<DateTime>("DataAgendada")
                        .HasColumnType("TEXT");

                    b.ToTable("Lembretes", (string)null);
                });

            modelBuilder.Entity("Softtek.Domain.Aggregates.AssistenciaEmocional.Tipos.Notificacao", b =>
                {
                    b.HasBaseType("Softtek.Domain.Aggregates.AssistenciaEmocional.ApoioBase");

                    b.Property<string>("NivelGravidade")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<bool>("Urgente")
                        .HasColumnType("INTEGER");

                    b.ToTable("Notificacoes", (string)null);
                });

            modelBuilder.Entity("Softtek.Domain.Aggregates.AssistenciaEmocional.Tipos.RecursoDeApoio", b =>
                {
                    b.HasBaseType("Softtek.Domain.Aggregates.AssistenciaEmocional.ApoioBase");

                    b.Property<string>("Categoria")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("Link")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("TEXT");

                    b.Property<int>("Tipo")
                        .HasColumnType("INTEGER");

                    b.ToTable("RecursosDeApoio", (string)null);
                });

            modelBuilder.Entity("Softtek.Domain.Aggregates.AvaliacaoPsicossocial.Escala.Tipos.EmocaoEscala", b =>
                {
                    b.HasBaseType("Softtek.Domain.Aggregates.AvaliacaoPsicossocial.Escala.EscalaBase");

                    b.ToTable("Escalas", (string)null);

                    b.HasDiscriminator().HasValue("Emocao");

                    b.HasData(
                        new
                        {
                            Codigo = "01JVKE1RX77BZFDSZ11QZTF6WP",
                            Descricao = "Uso: diário emocional",
                            Discriminator = "Emocao"
                        });
                });

            modelBuilder.Entity("Softtek.Domain.Aggregates.AvaliacaoPsicossocial.Escala.Tipos.FrequenciaEscala", b =>
                {
                    b.HasBaseType("Softtek.Domain.Aggregates.AvaliacaoPsicossocial.Escala.EscalaBase");

                    b.ToTable("Escalas", (string)null);

                    b.HasDiscriminator().HasValue("Frequencia");

                    b.HasData(
                        new
                        {
                            Codigo = "01JVKE1RX7FYD6WH6WSMV93BH2",
                            Descricao = "Uso: comportamentos",
                            Discriminator = "Frequencia"
                        });
                });

            modelBuilder.Entity("Softtek.Domain.Aggregates.AvaliacaoPsicossocial.Escala.Tipos.IntensidadeEscala", b =>
                {
                    b.HasBaseType("Softtek.Domain.Aggregates.AvaliacaoPsicossocial.Escala.EscalaBase");

                    b.ToTable("Escalas", (string)null);

                    b.HasDiscriminator().HasValue("Intensidade");

                    b.HasData(
                        new
                        {
                            Codigo = "01JVKE1RX7J8KPDF355Y9APEV5",
                            Descricao = "Uso: percepção de impacto",
                            Discriminator = "Intensidade"
                        });
                });

            modelBuilder.Entity("Softtek.Domain.Aggregates.AvaliacaoPsicossocial.Escala.Tipos.PontuacaoEscala", b =>
                {
                    b.HasBaseType("Softtek.Domain.Aggregates.AvaliacaoPsicossocial.Escala.EscalaBase");

                    b.ToTable("Escalas", (string)null);

                    b.HasDiscriminator().HasValue("Pontuacao");

                    b.HasData(
                        new
                        {
                            Codigo = "01JVKE1RX7DJSCHTB9794FRVX2",
                            Descricao = "Uso: questionários",
                            Discriminator = "Pontuacao"
                        });
                });

            modelBuilder.Entity("Softtek.Domain.Aggregates.AvaliacaoPsicossocial.Escala.Tipos.HumorEscala", b =>
                {
                    b.HasBaseType("Softtek.Domain.Aggregates.AvaliacaoPsicossocial.Escala.Tipos.EmocaoEscala");

                    b.ToTable("Escalas", (string)null);

                    b.HasDiscriminator().HasValue("Humor");

                    b.HasData(
                        new
                        {
                            Codigo = "01JVKE1RX725KF9W6DGBC91V1B",
                            Descricao = "Uso: bem-estar geral",
                            Discriminator = "Humor"
                        });
                });

            modelBuilder.Entity("Softtek.Domain.Aggregates.AssistenciaEmocional.ApoioBase", b =>
                {
                    b.HasOne("Softtek.Domain.Aggregates.AssistenciaEmocional.AssistenciaAggregate", "ApoioAggregate")
                        .WithMany("Apoios")
                        .HasForeignKey("ApoioAggregateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ApoioAggregate");
                });

            modelBuilder.Entity("Softtek.Domain.Aggregates.AvaliacaoPsicossocial.BlocoDePergunta", b =>
                {
                    b.HasOne("Softtek.Domain.Aggregates.AvaliacaoPsicossocial.AvaliacaoAggregate", "Avaliacao")
                        .WithMany("BlocosDePergunta")
                        .HasForeignKey("AvaliacaoCodigo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Avaliacao");
                });

            modelBuilder.Entity("Softtek.Domain.Aggregates.AvaliacaoPsicossocial.Escala.EscalaBase", b =>
                {
                    b.HasOne("Softtek.Domain.Aggregates.AvaliacaoPsicossocial.Escala.EscalaValor", null)
                        .WithMany("EscalasAssociadas")
                        .HasForeignKey("EscalaValorCodigo");
                });

            modelBuilder.Entity("Softtek.Domain.Aggregates.AvaliacaoPsicossocial.Escala.EscalaBaseValor", b =>
                {
                    b.HasOne("Softtek.Domain.Aggregates.AvaliacaoPsicossocial.Escala.EscalaBase", "EscalaBase")
                        .WithMany("ValoresAceitos")
                        .HasForeignKey("EscalaBaseCodigo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Softtek.Domain.Aggregates.AvaliacaoPsicossocial.Escala.EscalaValor", "EscalaValor")
                        .WithMany()
                        .HasForeignKey("EscalaValorCodigo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EscalaBase");

                    b.Navigation("EscalaValor");
                });

            modelBuilder.Entity("Softtek.Domain.Aggregates.AvaliacaoPsicossocial.Pergunta", b =>
                {
                    b.HasOne("Softtek.Domain.Aggregates.AvaliacaoPsicossocial.BlocoDePergunta", "Bloco")
                        .WithMany("Perguntas")
                        .HasForeignKey("BlocoDePerguntaCodigo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Softtek.Domain.Aggregates.AvaliacaoPsicossocial.Escala.EscalaBase", "Escala")
                        .WithMany()
                        .HasForeignKey("EscalaCodigo")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Bloco");

                    b.Navigation("Escala");
                });

            modelBuilder.Entity("Softtek.Domain.Aggregates.MonitoramentoEmocional.Questionario", b =>
                {
                    b.HasOne("Softtek.Domain.Aggregates.AvaliacaoPsicossocial.BlocoDePergunta", "BlocoDePergunta")
                        .WithMany()
                        .HasForeignKey("BlocoDePerguntaCodigo")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("BlocoDePergunta");
                });

            modelBuilder.Entity("Softtek.Domain.Aggregates.MonitoramentoEmocional.Resposta", b =>
                {
                    b.HasOne("Softtek.Domain.Aggregates.AvaliacaoPsicossocial.Escala.EscalaValor", "EscalaValor")
                        .WithMany()
                        .HasForeignKey("EscalaValorCodigo")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Softtek.Domain.Aggregates.AvaliacaoPsicossocial.Pergunta", "Pergunta")
                        .WithMany()
                        .HasForeignKey("PerguntaCodigo")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Softtek.Domain.Aggregates.MonitoramentoEmocional.Questionario", null)
                        .WithMany("Respostas")
                        .HasForeignKey("PerguntaCodigo")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Softtek.Domain.Aggregates.MonitoramentoEmocional.Questionario", "Questionario")
                        .WithMany()
                        .HasForeignKey("QuestionarioCodigo")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("EscalaValor");

                    b.Navigation("Pergunta");

                    b.Navigation("Questionario");
                });

            modelBuilder.Entity("Softtek.Domain.Aggregates.AssistenciaEmocional.Tipos.Lembrete", b =>
                {
                    b.HasOne("Softtek.Domain.Aggregates.AssistenciaEmocional.ApoioBase", null)
                        .WithOne()
                        .HasForeignKey("Softtek.Domain.Aggregates.AssistenciaEmocional.Tipos.Lembrete", "Codigo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Softtek.Domain.Aggregates.AssistenciaEmocional.Tipos.Notificacao", b =>
                {
                    b.HasOne("Softtek.Domain.Aggregates.AssistenciaEmocional.ApoioBase", null)
                        .WithOne()
                        .HasForeignKey("Softtek.Domain.Aggregates.AssistenciaEmocional.Tipos.Notificacao", "Codigo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Softtek.Domain.Aggregates.AssistenciaEmocional.Tipos.RecursoDeApoio", b =>
                {
                    b.HasOne("Softtek.Domain.Aggregates.AssistenciaEmocional.ApoioBase", null)
                        .WithOne()
                        .HasForeignKey("Softtek.Domain.Aggregates.AssistenciaEmocional.Tipos.RecursoDeApoio", "Codigo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Softtek.Domain.Aggregates.AssistenciaEmocional.AssistenciaAggregate", b =>
                {
                    b.Navigation("Apoios");
                });

            modelBuilder.Entity("Softtek.Domain.Aggregates.AvaliacaoPsicossocial.AvaliacaoAggregate", b =>
                {
                    b.Navigation("BlocosDePergunta");
                });

            modelBuilder.Entity("Softtek.Domain.Aggregates.AvaliacaoPsicossocial.BlocoDePergunta", b =>
                {
                    b.Navigation("Perguntas");
                });

            modelBuilder.Entity("Softtek.Domain.Aggregates.AvaliacaoPsicossocial.Escala.EscalaBase", b =>
                {
                    b.Navigation("ValoresAceitos");
                });

            modelBuilder.Entity("Softtek.Domain.Aggregates.AvaliacaoPsicossocial.Escala.EscalaValor", b =>
                {
                    b.Navigation("EscalasAssociadas");
                });

            modelBuilder.Entity("Softtek.Domain.Aggregates.MonitoramentoEmocional.Questionario", b =>
                {
                    b.Navigation("Respostas");
                });
#pragma warning restore 612, 618
        }
    }
}
